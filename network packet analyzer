from scapy.all import sniff, IP, TCP, UDP, Raw
from datetime import datetime
def process_packet(packet):
    print(f"\n--- Packet Captured @ {datetime.now()} ---")
  
    if IP in packet:
        ip_layer = packet[IP]
        print(f"Source IP: {ip_layer.src}")
        print(f"Destination IP: {ip_layer.dst}")
        print(f"Protocol: {ip_layer.proto}")
        if TCP in packet:
            print("Protocol Type: TCP")
            print(f"Source Port: {packet[TCP].sport}")
            print(f"Destination Port: {packet[TCP].dport}")
        elif UDP in packet:
            print("Protocol Type: UDP")
            print(f"Source Port: {packet[UDP].sport}")
            print(f"Destination Port: {packet[UDP].dport}")
        if Raw in packet:
            payload = packet[Raw].load
            try:
                print(f"Payload: {payload.decode(errors='ignore')}")
            except:
                print("Payload: Binary data (non-decodable)")
print("Starting Packet Sniffer... (Press Ctrl+C to stop)\n")
sniff(prn=process_packet, store=0)
